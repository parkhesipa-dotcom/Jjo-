import requests
import concurrent.futures
import time
from datetime import datetime

API_URL = "http://127.0.0.1:5000/verify_pan"  # your API endpoint
PAN = "ABCDE1234F"                            # fixed PAN to test
TOTAL_REQUESTS = 100
TARGET_DURATION = 60  # seconds (1 minute)

def hit_api(i):
    payload = {
        "pan": PAN,
        "lite": "Y",
        "consent": "Y",
        "clientData": {"caseId": f"CASE_{i}"}
    }

    start = time.time()
    try:
        r = requests.post(API_URL, json=payload, timeout=10)
        return (i, r.status_code, round(time.time() - start, 2))
    except Exception as e:
        return (i, "ERR", str(e))

start_time = time.time()
results = []

print(f"ðŸš€ Sending {TOTAL_REQUESTS} requests in ~{TARGET_DURATION}s ...")

# Create a thread pool
with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:
    futures = []
    interval = TARGET_DURATION / TOTAL_REQUESTS  # delay per request

    for i in range(TOTAL_REQUESTS):
        futures.append(executor.submit(hit_api, i))
        time.sleep(interval)  # evenly spread requests across 1 min

    for f in concurrent.futures.as_completed(futures):
        results.append(f.result())

elapsed = round(time.time() - start_time, 2)

# Summary
success = sum(1 for r in results if r[1] == 200)
fail = TOTAL_REQUESTS - success
print(f"\nâœ… Done in {elapsed}s â€” Success: {success}, Failed: {fail}")
for r in results[:10]:
    print(r)
