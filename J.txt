# -----------------------------------------------------------
# 🔹 Step 9 – Save Encrypted Key and Payload to Text File
# -----------------------------------------------------------

# Prepare the data you want to log or store
output_data = {
    "Encrypted_AES_Key": encrypted_key_data,
    "Encrypted_ClientAuth": encrypted_client_auth,
    "Encrypted_LRS_Body": encrypted_body
}

# Save to a timestamped text file for reference
from datetime import datetime
timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
filename = f"LRS_Encrypted_{timestamp}.txt"

with open(filename, "w", encoding="utf-8") as f:
    f.write("=== RBI LRS Encryption Output ===\n\n")
    f.write("🔐 Encrypted AES Key (RSA-OAEP):\n")
    f.write(encrypted_key_data + "\n\n")
    f.write("📦 Encrypted Client Auth (AES-GCM):\n")
    f.write(encrypted_client_auth + "\n\n")
    f.write("📄 Encrypted LRS Body (AES-GCM):\n")
    f.write(encrypted_body + "\n\n")
    f.write("✅ Final JSON Payload:\n")
    f.write(json.dumps(final_body, indent=4))
    f.write("\n")

print(f"\n💾 Encrypted details saved successfully to: {filename}")
