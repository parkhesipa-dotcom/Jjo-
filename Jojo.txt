import requests
from google.cloud import secretmanager


def get_secret(secret_id: str):
    """
    Fetches a secret value from GCP Secret Manager.
    No hardcoded project ID — both project and key come from secrets.
    """
    # Step 1: Get project ID secret first
    client = secretmanager.SecretManagerServiceClient()

    # Read the PROJECT_ID secret
    project_id_secret = "GCP_PROJECT_ID"  # name of the secret storing your project id
    project_id_name = f"projects/_/secrets/{project_id_secret}/versions/latest"
    project_id_response = client.access_secret_version(request={"name": project_id_name})
    project_id = project_id_response.payload.data.decode("UTF-8")

    # Step 2: Fetch the actual secret using that project id
    secret_name = f"projects/{project_id}/secrets/{secret_id}/versions/latest"
    response = client.access_secret_version(request={"name": secret_name})
    return response.payload.data.decode("UTF-8")


def fetch_pan_details(pan, consent, case_id, lite):
    print("log3")

    # ✅ Fetch secrets securely
    karza_key = get_secret("KARZA_API_KEY")

    url = "https://testapi.karza.in/v3/pan-profile"
    payload = {
        "pan": pan,
        "lite": lite,
        "consent": consent,
        "clientData": {"caseId": case_id}
    }

    headers = {
        "Content-Type": "application/json",
        "x-karza-key": karza_key
    }

    try:
        response = requests.post(url, json=payload, headers=headers, verify=False)
        print(response)
        response.raise_for_status()
        return response.json()

    except requests.exceptions.RequestException as e:
        return {"error": str(e)}
